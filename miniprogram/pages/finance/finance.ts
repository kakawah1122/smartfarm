// finance.ts
import { createPageWithNavbar } from '../../utils/navigation'

const pageConfig = {
  data: {
    selectedMonth: '2024年3月',
    monthOptions: [
      {label: '2024年3月', value: '2024年3月'},
      {label: '2024年2月', value: '2024年2月'},
      {label: '2024年1月', value: '2024年1月'}
    ],
    activeTab: 'records',
    
    // 财务概览
    overview: {
      income: '21.2',
      expense: '16.8',
      profit: '4.4',
      growthRate: '32.1',
      feedCost: '8.2',
      feedPercent: '48.8',
      laborCost: '4.5',
      laborPercent: '26.8',
      medicalCost: '2.1',
      medicalPercent: '12.5',
      otherCost: '2.0',
      otherPercent: '11.9'
    },
    
  // AI财务分析
  aiAnalysis: {
    loading: false,
    result: null as any,
    error: null as string | null,
    lastUpdateTime: null as string | null
  },
    
    // 筛选条件
    filters: {
      type: '全部类型',
      period: '最近7天'
    },
    typeOptions: [
      {label: '全部类型', value: '全部类型'},
      {label: '收入', value: '收入'},
      {label: '支出', value: '支出'}
    ],
    periodOptions: [
      {label: '最近7天', value: '最近7天'},
      {label: '最近30天', value: '最近30天'},
      {label: '本月', value: '本月'}
    ],
    
    // 财务记录
    records: [
      {
        id: 1,
        type: 'income',
        icon: '💰',
        title: '成鹅销售收入',
        description: '客户：苏州农贸市场 • 120羽',
        amount: '18,000',
        date: '2024-03-15 14:30',
        relatedInfo: '出栏记录关联',
        status: '已入账',
        statusTheme: 'success',
        autoGenerated: true
      },
      {
        id: 2,
        type: 'expense',
        icon: '🛒',
        title: '优质鹅用饲料采购',
        description: '供应商：正大集团 • 1.5吨',
        amount: '4,500',
        date: '2024-03-15 10:20',
        relatedInfo: '物料采购关联',
        status: '已支出',
        statusTheme: 'danger',
        autoGenerated: true
      },
      {
        id: 3,
        type: 'expense',
        icon: '🦢',
        title: '白鹅苗采购支出',
        description: '供应商：江苏鹅业 • 200羽',
        amount: '1,640',
        date: '2024-03-14 16:45',
        relatedInfo: '入栏记录关联',
        status: '已支出',
        statusTheme: 'danger',
        autoGenerated: true
      },
      {
        id: 4,
        type: 'expense',
        icon: '💊',
        title: '疫苗药品支出',
        description: '禽流感疫苗 • 治疗用药',
        amount: '750',
        date: '2024-03-13 11:15',
        relatedInfo: '健康记录关联',
        status: '已支出',
        statusTheme: 'danger',
        autoGenerated: true
      },
      {
        id: 5,
        type: 'expense',
        icon: '⚡',
        title: '水电费支出',
        description: '养殖场3月份水电费',
        amount: '1,280',
        date: '2024-03-12 18:30',
        relatedInfo: '张三录入',
        status: '手动记录',
        statusTheme: 'default',
        autoGenerated: false
      }
    ],
    
    // 财务报表
    reports: {
      yearGrowth: '24.5',
      profitRate: '20.7'
    },
    
    // 审批事项
    approvalItems: [
      {
        id: 1,
        type: 'expense',
        icon: '📋',
        applicant: '李四',
        title: '差旅费报销',
        description: '去苏州鹅苗市场考察费用',
        amount: '280',
        submitTime: '今天 14:30'
      },
      {
        id: 2,
        type: 'purchase',
        icon: '🛒',
        applicant: '王五',
        title: '饲料采购申请',
        description: '优质鹅用饲料 2吨',
        amount: '6,000',
        submitTime: '今天 11:20'
      }
    ],
    
    filteredRecords: []
  },

  onLoad() {
    this.setData({
      filteredRecords: this.data.records
    })
  },

  // 返回上一页
  goBack() {
    wx.navigateBack({
      fail: () => {
        wx.switchTab({
          url: '/pages/profile/profile'
        })
      }
    })
  },

  // 月份选择
  onMonthChange(e: any) {
    this.setData({
      selectedMonth: e.detail.value
    })
    this.loadFinanceData()
  },

  // Tab切换 - TDesign 格式
  onTabChange(e: any) {
    const { value } = e.detail
    this.setData({
      activeTab: value
    })
  },

  // 切换Tab的旧方法保持兼容
  switchTab(e: any) {
    const { tab } = e.currentTarget.dataset
    this.setData({
      activeTab: tab
    })
  },

  // 类型筛选
  onTypeFilterChange(e: any) {
    this.setData({
      'filters.type': e.detail.value
    })
    this.filterRecords()
  },

  // 时间筛选
  onPeriodFilterChange(e: any) {
    this.setData({
      'filters.period': e.detail.value
    })
    this.filterRecords()
  },

  // 筛选记录
  filterRecords() {
    let filtered = this.data.records
    
    // 按类型筛选
    if (this.data.filters.type !== '全部类型') {
      const typeMap = { '收入': 'income', '支出': 'expense' }
      filtered = filtered.filter(record => 
        record.type === typeMap[this.data.filters.type as keyof typeof typeMap]
      )
    }
    
    // 按时间筛选 (这里简化处理，实际应该按日期筛选)
    
    this.setData({
      filteredRecords: filtered
    })
  },

  // 加载财务数据
  loadFinanceData() {
    // 模拟API调用
    wx.showLoading({
      title: '加载中...'
    })
    
    setTimeout(() => {
      wx.hideLoading()
      // 这里会根据选择的月份加载对应数据
    }, 1000)
  },

  // ========== AI财务分析功能 ==========
  
  // 生成AI财务分析
  async generateFinancialAnalysis() {
    try {
      this.setData({ 
        'aiAnalysis.loading': true,
        'aiAnalysis.error': null
      })
      
      // 收集财务数据
      const financialData = this.collectFinancialData()
      
      // 构建分析提示词
      const prompt = this.buildFinancialAnalysisPrompt(financialData)
      
      // 调用AI云函数
      const result = await wx.cloud.callFunction({
        name: 'ai-multi-model',
        data: {
          task: 'financial_analysis',
          content: prompt,
          options: {
            model: 'glm-4-flash', // 使用GLM-4进行财务分析
            temperature: 0.3,
            maxTokens: 2000
          }
        }
      })
      
      if (result.result.success) {
        const analysisResult = this.parseFinancialAnalysisResult(result.result.data.content)
        
        this.setData({
          'aiAnalysis.loading': false,
          'aiAnalysis.result': analysisResult,
          'aiAnalysis.lastUpdateTime': new Date().toLocaleString('zh-CN')
        })
        
        // 触觉反馈
        wx.vibrateShort()
        
        wx.showToast({
          title: 'AI分析完成',
          icon: 'success'
        })
      } else {
        throw new Error(result.result.error || 'AI分析失败')
      }
      
    } catch (error) {
      console.error('财务AI分析失败:', error)
      
      // 提供备用分析结果
      const fallbackResult = this.generateFallbackAnalysis()
      
      this.setData({
        'aiAnalysis.loading': false,
        'aiAnalysis.result': fallbackResult,
        'aiAnalysis.error': '使用离线分析模式'
      })
      
      wx.showToast({
        title: '使用离线分析',
        icon: 'none'
      })
    }
  },
  
  // 收集财务数据
  collectFinancialData() {
    const { overview, records } = this.data
    
    // 计算近期数据统计
    const recentRecords = records.filter(record => {
      const recordDate = new Date(record.date)
      const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)
      return recordDate >= sevenDaysAgo
    })
    
    // 收入支出分类统计
    const incomeRecords = recentRecords.filter(r => r.type === 'income')
    const expenseRecords = recentRecords.filter(r => r.type === 'expense')
    
    // 按类别统计支出
    const expenseCategories = {}
    expenseRecords.forEach(record => {
      const category = record.category || '其他'
      expenseCategories[category] = (expenseCategories[category] || 0) + parseFloat(record.amount)
    })
    
    return {
      overview,
      recentIncome: incomeRecords.reduce((sum, r) => sum + parseFloat(r.amount), 0),
      recentExpense: expenseRecords.reduce((sum, r) => sum + parseFloat(r.amount), 0),
      expenseCategories,
      recordCount: records.length,
      recentRecordCount: recentRecords.length,
      profitMargin: ((parseFloat(overview.totalIncome) - parseFloat(overview.totalExpense)) / parseFloat(overview.totalIncome) * 100).toFixed(1)
    }
  },
  
  // 构建财务分析提示词
  buildFinancialAnalysisPrompt(financialData: any): string {
    return `你是一位专业的养殖业财务顾问，请基于以下财务数据进行深度分析，并提供专业的财务管理建议。请以JSON格式回复，包含以下结构：

{
  "healthScore": 数值(0-100),
  "healthLevel": "excellent|good|average|poor",
  "healthIndicators": [
    {"category": "现金流", "score": 数值, "level": "excellent|good|average|poor"},
    {"category": "盈利能力", "score": 数值, "level": "excellent|good|average|poor"},
    {"category": "成本控制", "score": 数值, "level": "excellent|good|average|poor"},
    {"category": "增长潜力", "score": 数值, "level": "excellent|good|average|poor"}
  ],
  "costOptimization": [
    {
      "category": "分类名称",
      "potentialSaving": "预计节省金额",
      "recommendation": "优化建议",
      "expectedImpact": "预期效果描述",
      "timeline": "实施周期"
    }
  ],
  "monthlyForecast": [
    {
      "month": "月份名称",
      "income": "预测收入(万元)",
      "expense": "预测支出(万元)", 
      "profit": "预测净利润(万元)",
      "trendDirection": "up|down|stable",
      "trendText": "趋势描述"
    }
  ],
  "forecastConfidence": 数值(0-100),
  "investmentOpportunities": [
    {
      "type": "投资类型",
      "description": "投资描述",
      "requiredInvestment": "所需投资金额(万元)",
      "expectedROI": 预期回报率百分比,
      "paybackPeriod": "回收周期",
      "riskLevel": "low|medium|high",
      "riskLevelText": "风险等级文本"
    }
  ],
  "riskAlerts": [
    {
      "severity": "high|medium|low",
      "icon": "图标",
      "title": "风险标题",
      "description": "风险描述",
      "suggestion": "建议措施"
    }
  ]
}

## 当前财务数据分析：

**总体财务状况：**
- 月收入：¥${financialData.overview.totalIncome}万
- 月支出：¥${financialData.overview.totalExpense}万
- 净利润：¥${financialData.overview.profit}万
- 利润率：${financialData.profitMargin}%

**成本结构分析：**
- 饲料成本：¥${financialData.overview.feedCost}万 (占比${financialData.overview.feedPercent}%)
- 人工成本：¥${financialData.overview.laborCost}万 (占比${financialData.overview.laborPercent}%)
- 医疗成本：¥${financialData.overview.medicalCost}万 (占比${financialData.overview.medicalPercent}%)
- 其他成本：¥${financialData.overview.otherCost}万 (占比${financialData.overview.otherPercent}%)

**近期财务趋势：**
- 近7天收入：¥${(financialData.recentIncome/10000).toFixed(2)}万
- 近7天支出：¥${(financialData.recentExpense/10000).toFixed(2)}万
- 记录数量：${financialData.recordCount}条
- 近期记录：${financialData.recentRecordCount}条

**支出分类明细：**
${Object.entries(financialData.expenseCategories).map(([category, amount]: [string, any]) => 
  `- ${category}：¥${(amount/10000).toFixed(2)}万`
).join('\n')}

请基于以上数据进行专业的财务健康度评估，提供成本优化建议，进行盈利预测，给出投资建议，并识别潜在的财务风险。分析应该具体、实用，针对鹅类养殖业的特点。`
  },
  
  // 解析AI财务分析结果
  parseFinancialAnalysisResult(content: string): any {
    try {
      // 尝试提取JSON
      const jsonMatch = content.match(/\{[\s\S]*\}/)
      if (jsonMatch) {
        const result = JSON.parse(jsonMatch[0])
        
        // 数据验证和处理
        return {
          healthScore: result.healthScore || 75,
          healthLevel: result.healthLevel || 'good',
          healthIndicators: result.healthIndicators || [],
          costOptimization: result.costOptimization || [],
          monthlyForecast: result.monthlyForecast || [],
          forecastConfidence: result.forecastConfidence || 80,
          investmentOpportunities: result.investmentOpportunities || [],
          riskAlerts: result.riskAlerts || []
        }
      }
    } catch (error) {
      console.error('解析AI分析结果失败:', error)
    }
    
    // 解析失败时返回备用结果
    return this.generateFallbackAnalysis()
  },
  
  // 生成备用财务分析结果
  generateFallbackAnalysis(): any {
    const { overview } = this.data
    const profitMargin = parseFloat(overview.profit) / parseFloat(overview.totalIncome) * 100
    
    return {
      healthScore: profitMargin > 20 ? 85 : profitMargin > 10 ? 70 : profitMargin > 0 ? 60 : 45,
      healthLevel: profitMargin > 20 ? 'excellent' : profitMargin > 10 ? 'good' : profitMargin > 0 ? 'average' : 'poor',
      healthIndicators: [
        {
          category: '现金流',
          score: profitMargin > 0 ? 75 : 40,
          level: profitMargin > 0 ? 'good' : 'poor'
        },
        {
          category: '盈利能力',
          score: Math.max(30, Math.min(90, profitMargin * 3)),
          level: profitMargin > 15 ? 'excellent' : profitMargin > 8 ? 'good' : profitMargin > 0 ? 'average' : 'poor'
        },
        {
          category: '成本控制',
          score: parseFloat(overview.feedPercent) < 60 ? 80 : 60,
          level: parseFloat(overview.feedPercent) < 60 ? 'good' : 'average'
        },
        {
          category: '增长潜力',
          score: 70,
          level: 'good'
        }
      ],
      costOptimization: [
        {
          category: '饲料采购',
          potentialSaving: '1.2',
          recommendation: '建议批量采购优质饲料，选择性价比更高的供应商',
          expectedImpact: '降低饲料成本8-12%',
          timeline: '1-2个月'
        },
        {
          category: '能源管理',
          potentialSaving: '0.8',
          recommendation: '优化养殖环境控制系统，减少不必要的能耗',
          expectedImpact: '节省电费和燃料成本',
          timeline: '即时执行'
        }
      ],
      monthlyForecast: [
        {
          month: '下个月',
          income: (parseFloat(overview.totalIncome) * 1.05).toFixed(1),
          expense: (parseFloat(overview.totalExpense) * 1.02).toFixed(1),
          profit: (parseFloat(overview.profit) * 1.15).toFixed(1),
          trendDirection: 'up',
          trendText: '稳步增长'
        },
        {
          month: '两个月后',
          income: (parseFloat(overview.totalIncome) * 1.08).toFixed(1),
          expense: (parseFloat(overview.totalExpense) * 1.03).toFixed(1),
          profit: (parseFloat(overview.profit) * 1.25).toFixed(1),
          trendDirection: 'up',
          trendText: '持续向好'
        },
        {
          month: '三个月后',
          income: (parseFloat(overview.totalIncome) * 1.12).toFixed(1),
          expense: (parseFloat(overview.totalExpense) * 1.05).toFixed(1),
          profit: (parseFloat(overview.profit) * 1.35).toFixed(1),
          trendDirection: 'up',
          trendText: '显著提升'
        }
      ],
      forecastConfidence: 75,
      investmentOpportunities: [
        {
          type: '设备升级',
          description: '投资自动化喂养设备，提高养殖效率',
          requiredInvestment: '5.0',
          expectedROI: 35,
          paybackPeriod: '18个月',
          riskLevel: 'low',
          riskLevelText: '低风险'
        },
        {
          type: '规模扩张',
          description: '新建养殖区域，扩大养殖规模',
          requiredInvestment: '12.0',
          expectedROI: 28,
          paybackPeriod: '24个月',
          riskLevel: 'medium',
          riskLevelText: '中等风险'
        }
      ],
      riskAlerts: profitMargin < 5 ? [
        {
          severity: 'high',
          icon: '🚨',
          title: '盈利能力偏低',
          description: '当前利润率较低，存在经营风险',
          suggestion: '优化成本结构，提高产品价值'
        }
      ] : []
    }
  },

  // 查看记录详情
  viewRecordDetail(e: any) {
    const { item } = e.currentTarget.dataset
    wx.showModal({
      title: '交易详情',
      content: `${item.title}\n\n${item.description}\n\n金额：¥${item.amount}\n时间：${item.date}`,
      showCancel: false
    })
  },

  // 通过审批
  approveApproval(e: any) {
    const { id } = e.currentTarget.dataset
    wx.showModal({
      title: '确认操作',
      content: '确认通过此申请？',
      success: (res) => {
        if (res.confirm) {
          this.removeApprovalItem(id)
          wx.showToast({
            title: '申请已通过',
            icon: 'success'
          })
        }
      }
    })
  },

  // 拒绝审批
  rejectApproval(e: any) {
    const { id } = e.currentTarget.dataset
    wx.showModal({
      title: '确认操作',
      content: '确认拒绝此申请？',
      success: (res) => {
        if (res.confirm) {
          this.removeApprovalItem(id)
          wx.showToast({
            title: '申请已拒绝',
            icon: 'success'
          })
        }
      }
    })
  },

  // 移除审批项
  removeApprovalItem(id: number) {
    const approvalItems = this.data.approvalItems.filter(item => item.id !== id)
    this.setData({
      approvalItems
    })
  },

  // 手动记账
  addManualRecord() {
    wx.showToast({
      title: '功能开发中',
      icon: 'none'
    })
  },

  // 导出报表
  exportReport() {
    wx.showLoading({
      title: '导出中...'
    })
    
    setTimeout(() => {
      wx.hideLoading()
      wx.showToast({
        title: '报表已导出',
        icon: 'success'
      })
    }, 1500)
  },

  // 审批操作 - 适配 TDesign 滑动操作
  onApprovalAction(e: any) {
    const { action } = e.detail
    const { item } = e.currentTarget.dataset
    
    if (action.text === '通过') {
      this.approveApproval({ currentTarget: { dataset: { id: item.id } } })
    } else if (action.text === '拒绝') {
      this.rejectApproval({ currentTarget: { dataset: { id: item.id } } })
    }
  }
}

// 使用导航栏适配工具创建页面
Page(createPageWithNavbar(pageConfig))
